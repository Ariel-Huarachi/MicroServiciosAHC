
1) Insertar un alumno mujer con dos materias y padre de apellido "Torres".
db.alumnos.insertOne({
  nombres: "Sofía", apellidos: "García", sexo: "F",
  fecha_nacimiento: ISODate("2003-02-14"), casado: false,
  materias: ["SIS256","COM350"], padre: { nombre: "Pedro", apellido: "Torres" }
})

 2) Insertar cinco alumnos a la vez con datos variados.
db.alumnos.insertMany([
  { nombres: "Jorge",   apellidos: "Suárez",  sexo: "M", fecha_nacimiento: ISODate("1998-06-01"), casado: true,  materias: ["SIS258"],                   padre: { nombre: "Luis",   apellido: "Suárez" } },
  { nombres: "Elena",   apellidos: "Vázquez", sexo: "F", fecha_nacimiento: ISODate("2000-10-10"), casado: false, materias: ["SIS00","COM350"],           padre: { nombre: "Miguel", apellido: "Vázquez" } },
  { nombres: "Valeria", apellidos: "Ortiz",   sexo: "F", fecha_nacimiento: ISODate("2005-12-30"), casado: false, materias: [],                           padre: { nombre: "Carlos", apellido: "Ortiz" } },
  { nombres: "Pablo",   apellidos: "Alvarez", sexo: "M", fecha_nacimiento: ISODate("1997-03-05"), casado: false, materias: ["SIS256","SIS258","COM350"], padre: { nombre: "Juan",   apellido: "Alvarez" } },
  { nombres: "Andrea",  apellidos: "Méndez",  sexo: "F", fecha_nacimiento: ISODate("2002-04-18"), casado: false, materias: ["COM350"],                   padre: { nombre: "Luis",   apellido: "Méndez" } }
])

  3) Insertar un alumno sin campo padre.
db.alumnos.insertOne({
  nombres: "Noel", apellidos: "Campos", sexo: "M",
  fecha_nacimiento: ISODate("2004-05-05"), casado: false, materias: ["SIS256"]
})

  4) Insertar un alumno hombre casado, nacido en 1990.
db.alumnos.insertOne({
  nombres: "Ricardo", apellidos: "Flores", sexo: "M",
  fecha_nacimiento: ISODate("1990-09-09"), casado: true,
  materias: ["SIS258","SIS00"], padre: { nombre: "Luis", apellido: "Flores" }
})

  5) Insertar un alumno con 4 materias y padre "Carlos Pérez".
db.alumnos.insertOne({
  nombres: "Marcos", apellidos: "Rojas", sexo: "M",
  fecha_nacimiento: ISODate("2001-01-20"), casado: false,
  materias: ["SIS256","SIS258","COM350","SIS00"],
  padre: { nombre: "Carlos", apellido: "Pérez" }
})

  6) Insertar un alumno solo con "COM350" como materia.
db.alumnos.insertOne({
  nombres: "Diana", apellidos: "Quispe", sexo: "F",
  fecha_nacimiento: ISODate("2003-07-07"), casado: false,
  materias: ["COM350"], padre: { nombre: "Miguel", apellido: "Quispe" }
})

  7) Listar alumnos cuyo padre tenga nombre "Luis" o "Miguel".
db.alumnos.find({ "padre.nombre": { $in: ["Luis","Miguel"] } })

  8) Mostrar alumnos no casados que tengan "SIS256".
db.alumnos.find({ casado: false, materias: "SIS256" })

  9) Contar alumnos con más de 2 materias.
db.alumnos.countDocuments({
  $expr: { $gt: [ { $size: { $ifNull: ["$materias", []] } }, 2 ] }
})

  10) Mostrar los 10 más viejos (nombres, apellidos, fecha_nacimiento).
db.alumnos.find({}, { _id:0, nombres:1, apellidos:1, fecha_nacimiento:1 })
          .sort({ fecha_nacimiento: 1 }).limit(10)

  11) Buscar alumnos con "COM350" y "SIS00".
db.alumnos.find({ materias: { $all: ["COM350","SIS00"] } })

  12) Mostrar solo nombres y sexo de las alumnas mujeres.
db.alumnos.find({ sexo: "F" }, { _id:0, nombres:1, sexo:1 })

  13) Ordenar todos los alumnos por apellidos ascendente (A→Z, collation ES).
db.alumnos.find({}, { _id:0, nombres:1, apellidos:1 })
          .sort({ apellidos: 1, nombres: 1 })
          .collation({ locale: "es", strength: 1 })

  14) Listar alumnos nacidos entre 1998 y 2003 (inclusive).
db.alumnos.find({
  fecha_nacimiento: { $gte: ISODate("1998-01-01"), $lte: ISODate("2003-12-31") }
})

  15) Mostrar alumnos cuyo apellido termine en "ez".
db.alumnos.find({ apellidos: { $regex: /ez$/i } })

  16) Contar alumnos casados y con "SIS258".
db.alumnos.countDocuments({ casado: true, materias: "SIS258" })

  17) Cambiar el nombre "Luis" por "Luis Alberto".
db.alumnos.updateMany({ nombres: "Luis" }, { $set: { nombres: "Luis Alberto" } })

  18) Agregar "SIS777" a todos los alumnos con "COM350".
db.alumnos.updateMany(
  { materias: "COM350" },
  { $addToSet: { materias: "SIS777" } }
)

  19) Poner casado:false a todos los alumnos con menos de 2 materias.
db.alumnos.updateMany(
  { $expr: { $lt: [ { $size: { $ifNull: ["$materias", []] } }, 2 ] } },
  { $set: { casado: false } }
)

  20) Quitar "SIS256" de todos los que la tengan.
db.alumnos.updateMany(
  { materias: "SIS256" },
  { $pull: { materias: "SIS256" } }
)

  21) Cambiar el nombre del padre "Juan" a "Juan José".
db.alumnos.updateMany(
  { "padre.nombre": "Juan" },
  { $set: { "padre.nombre": "Juan José" } }
)

  22) Agregar un campo activo:true a todos los documentos.
db.alumnos.updateMany({}, { $set: { activo: true } })

  23) Eliminar todos los alumnos hombres.
db.alumnos.deleteMany({ sexo: "M" })

  24) Eliminar a quien tenga "SIS777" como materia.
db.alumnos.deleteMany({ materias: "SIS777" })

  25) Eliminar a los alumnos cuyo padre tenga apellido "Ramírez".
db.alumnos.deleteMany({ "padre.apellido": "Ramírez" })

  26) Eliminar a los que nacieron después de 2004.
db.alumnos.deleteMany({ fecha_nacimiento: { $gt: ISODate("2004-12-31") } })

  27) Eliminar todos los casados.
db.alumnos.deleteMany({ casado: true })

 28) Eliminar al primer alumno que tenga "SIS258".
db.alumnos.deleteOne({ materias: "SIS258" })
